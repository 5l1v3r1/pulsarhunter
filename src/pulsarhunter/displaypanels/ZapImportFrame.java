/*
Copyright (C) 2005-2007 Michael Keith, University Of Manchester

email: mkeith@pulsarastronomy.net
www  : www.pulsarastronomy.net/wiki/Software/PulsarHunter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

*/
/*
 * ZapImportFrame.java
 *
 * Created on 27 February 2007, 12:30
 */

package pulsarhunter.displaypanels;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import pulsarhunter.FrequencyFilter;
import pulsarhunter.PulsarHunter;
import pulsarhunter.datatypes.ZapFile;

/**
 *
 * @author  mkeith
 */
public class ZapImportFrame extends javax.swing.JFrame {
    private File importFile;
    private ZapFileDisplayFrame source;
    
    /** Creates new form ZapImportFrame */
    public ZapImportFrame(File importFile, ZapFileDisplayFrame source) {
        this.importFile = importFile;
        this.source = source;
        initComponents();
        try {
            
            BufferedReader reader = new BufferedReader(new FileReader(importFile));
            int i = 0;
            String line = reader.readLine();
            while(line!=null && i < 20){
                this.jTextArea1.append(line+"\n");
                i++;
                line = reader.readLine();
            }
            reader.close();
        }catch (IOException ex) {
            this.jTextArea1.setText("IOError trying to read file!\n\n\n");
            this.jTextArea1.append(ex.getMessage());
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_mult = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField_width = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("PulsarHunter ZapFile");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel4.add(jRadioButton1);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("\"start end\" list");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel4.add(jRadioButton2);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("\"centre width\" list");
        jRadioButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel4.add(jRadioButton3);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("\"centre\" only list");
        jRadioButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jPanel4.add(jRadioButton4);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(2, 2));

        jLabel1.setText("MultiplyFactor");
        jPanel5.add(jLabel1);

        jTextField_mult.setText("1");
        jPanel5.add(jTextField_mult);

        jLabel2.setText("Fixed Width");
        jPanel5.add(jLabel2);

        jPanel5.add(jTextField_width);

        jPanel2.add(jPanel5);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jButton1.setText("Import");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.add(jButton2);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            
            Double mult = Double.parseDouble(this.jTextField_mult.getText());
            
            if(this.jRadioButton1.isSelected()){
                ZapFile f = new ZapFile(importFile);
                f.read();
                for(FrequencyFilter fil : f.getFilters()){
                    fil.setStart(fil.getStart()*mult);
                    fil.setEnd(fil.getEnd()*mult);
                }
                source.getZapFile().addFilters(f.getFilters());
                
                
            } else if(this.jRadioButton2.isSelected()){
                
                BufferedReader reader = new BufferedReader(new FileReader(importFile));
                ArrayList<FrequencyFilter> filters = new ArrayList<FrequencyFilter>();
                String line = reader.readLine();
                int errno = 0;
                while(line!=null ){
                    
                    String[] elems = line.split("\\s+");
                    if(elems.length > 1){
                        try{
                            double start = Double.parseDouble(elems[0])*mult;
                            double end = Double.parseDouble(elems[1])*mult;
                            System.out.println(start+" "+end);
                            filters.add(new FrequencyFilter(start,end));
                        }catch(NumberFormatException e){
                            errno++;
                        }
                    }
                    line = reader.readLine();
                }
                
                
                if(errno > 0)System.out.println("ImportFilters: "+errno+" 'bad' lines ignored");
                source.getZapFile().addFilters(filters);
            } else if(this.jRadioButton3.isSelected()){
                BufferedReader reader = new BufferedReader(new FileReader(importFile));
                ArrayList<FrequencyFilter> filters = new ArrayList<FrequencyFilter>();
                String line = reader.readLine();
                int errno = 0;
                while(line!=null ){
                    
                    String[] elems = line.split("\\s+");
                    if(elems.length > 1){
                        try{
                            double centre = Double.parseDouble(elems[0])*mult;
                            double width = Double.parseDouble(elems[1])*mult;
                            double start = centre - width/2.0;
                            double end = centre + width/2.0;
                            filters.add(new FrequencyFilter(start,end));
                        }catch(NumberFormatException e){
                            errno++;
                        }
                    }
                    
                    line = reader.readLine();
                }
                
                if(errno > 0)PulsarHunter.out.println("ImportFilters: "+errno+" 'bad' lines ignored");
                source.getZapFile().addFilters(filters);
            } else if(this.jRadioButton4.isSelected()){
                System.out.println("TEST");
                BufferedReader reader = new BufferedReader(new FileReader(importFile));
                ArrayList<FrequencyFilter> filters = new ArrayList<FrequencyFilter>();
                String line = reader.readLine();
                double width = Double.parseDouble(this.jTextField_width.getText())*mult;
                int errno = 0;

                while(line!=null ){

                    String[] elems = line.split("\\s+");
                    if(elems.length > 0){
                        try{
                            double centre = Double.parseDouble(elems[0])*mult;
                            
                            double start = centre - width/2.0;
                            double end = centre + width/2.0;

                            filters.add(new FrequencyFilter(start,end));
                        }catch(NumberFormatException e){
                            errno++;
                        }
                    }
                    
                    line = reader.readLine();
                }
                
                if(errno > 0)PulsarHunter.out.println("ImportFilters: "+errno+" 'bad' lines ignored");
                source.getZapFile().addFilters(filters);
            }
        } catch(IOException e) {
            e.printStackTrace();
        }
        source.refresh();
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField_mult;
    private javax.swing.JTextField jTextField_width;
    // End of variables declaration//GEN-END:variables
    
}
