/*
 * AddToZapFile.java
 *
 * Created on January 29, 2008, 10:54 AM
 */

package pulsarhunter.jreaper.gui;

import java.io.File;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import pulsarhunter.FrequencyFilter;
import pulsarhunter.Pair;
import pulsarhunter.datatypes.ZapFile;
import pulsarhunter.jreaper.DataLibrary;

/**
 *
 * @author  mkeith
 */
public class AddToZapFile extends javax.swing.JFrame {
    
    private DataLibrary dl;
    private MainView mv;
    
    private static String lastZapFileUsed = null;
    
    /** Creates new form AddToZapFile */
    public AddToZapFile(MainView mv,double centreFreq, double width, int nharm, int nsubharm) {
        initComponents();
        
        this.mv = mv;
        this.dl = mv.getDataLibrary();
        
        centreFreq = (double)((int)(centreFreq*10000.0)/10000.0);
        
        this.jTextField_centre.setText(Double.toString(centreFreq));
        this.jTextField_width.setText(Double.toString(width));
        this.jTextField_nharm.setText(Integer.toString(nharm));
        this.jTextField_nsub.setText(Integer.toString(nsubharm));
        
        int i = 0;
        String[] zapfiles = new String[dl.getOptions().getZapFiles().size()];
        for(Pair<String,Boolean> pair : dl.getOptions().getZapFiles()){
            zapfiles[i++] = pair.getA();
        }
        
        this.jComboBox1.setModel(new DefaultComboBoxModel(zapfiles));
        if(lastZapFileUsed != null)this.jComboBox1.setSelectedItem(lastZapFileUsed);
        this.refreshTextWindow();
    }
    
    
    public void refreshTextWindow(){
        StringBuffer buf = new StringBuffer();
        
        int nharm = Integer.parseInt(this.jTextField_nharm.getText().trim());
        int nsub = Integer.parseInt(this.jTextField_nsub.getText().trim());
        boolean proportionalWidth = this.jCheckBox1.isSelected();
        double centre = Double.parseDouble(this.jTextField_centre.getText());
        
        double width = Double.parseDouble(this.jTextField_width.getText());
        
        double start,end,ewidth;
        for(int i = 1; i <= nharm; i++){
            if(proportionalWidth)ewidth = width * i;
            else ewidth = width;
            start = (double)i*centre - ewidth/2.0;
            end = (double)i*centre + ewidth/2.0;
            buf.append(start);
            buf.append(" - ");
            buf.append(end);
            buf.append(" Hz\n");
            
        }
        
        for(int i = 2; i <= nsub; i++){
            if(proportionalWidth)ewidth = width / (double)i;
            else ewidth = width;
            start = centre/(double)i - ewidth/2.0;
            end = centre/(double)i + ewidth/2.0;
            buf.append(start);
            buf.append(" - ");
            buf.append(end);
            buf.append(" Hz\n");
            
        }
        this.jTextArea1.setText(buf.toString());
        this.jTextArea1.setCaretPosition(0);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jTextField_centre = new javax.swing.JTextField();
        jTextField_width = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nharm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_nsub = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButton_create = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_save = new javax.swing.JButton();
        jButton_cance = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add to Dud List");
        jTextField_centre.setText("0");
        jTextField_centre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_centreActionPerformed(evt);
            }
        });
        jTextField_centre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_centreFocusLost(evt);
            }
        });
        jTextField_centre.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField_centreInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jTextField_width.setText("0");
        jTextField_width.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_widthFocusLost(evt);
            }
        });
        jTextField_width.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField_widthInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel1.setText("Centre Freqency (Hz)");

        jLabel2.setText("Width (Hz)");

        jTextField_nharm.setText("0");
        jTextField_nharm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_nharmFocusLost(evt);
            }
        });
        jTextField_nharm.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField_nharmInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel3.setText("Number Of Harmonics (1,2,3,...)");

        jTextField_nsub.setText("0");
        jTextField_nsub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_nsubFocusLost(evt);
            }
        });
        jTextField_nsub.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextField_nsubInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel4.setText("Number Of SubHarmonics (1/2,1/3,...)");

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Width Proportional to harmonic number");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setEnabled(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setEditable(true);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Add to which list:");

        jButton_create.setText("Create New List");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_nsub)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_nharm)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_width)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_centre, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel2)
                                    .add(jLabel3)
                                    .add(jLabel1)))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel4))))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 412, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBox1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_create)))
                .add(160, 160, 160))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextField_centre, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTextField_width, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jTextField_nharm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jTextField_nsub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jComboBox1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton_create))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 11, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        jButton_save.setText("Add Filter");
        jButton_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveActionPerformed(evt);
            }
        });

        jPanel2.add(jButton_save);

        jButton_cance.setText("Cancel");
        jButton_cance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_canceActionPerformed(evt);
            }
        });

        jPanel2.add(jButton_cance);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField_nsubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_nsubFocusLost
        this.refreshTextWindow();
    }//GEN-LAST:event_jTextField_nsubFocusLost
    
    private void jTextField_nharmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_nharmFocusLost
        this.refreshTextWindow();
    }//GEN-LAST:event_jTextField_nharmFocusLost
    
    private void jTextField_widthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_widthFocusLost
        this.refreshTextWindow();
    }//GEN-LAST:event_jTextField_widthFocusLost
    
    private void jTextField_centreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_centreFocusLost
        this.refreshTextWindow();
    }//GEN-LAST:event_jTextField_centreFocusLost
    
    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        this.refreshTextWindow();
        
    }//GEN-LAST:event_jCheckBox1StateChanged
    
    private void jTextField_nsubInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField_nsubInputMethodTextChanged
        
        
    }//GEN-LAST:event_jTextField_nsubInputMethodTextChanged
    
    private void jTextField_nharmInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField_nharmInputMethodTextChanged
        
    }//GEN-LAST:event_jTextField_nharmInputMethodTextChanged
    
    private void jTextField_widthInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField_widthInputMethodTextChanged
        
    }//GEN-LAST:event_jTextField_widthInputMethodTextChanged
    
    private void jTextField_centreInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField_centreInputMethodTextChanged
        
    }//GEN-LAST:event_jTextField_centreInputMethodTextChanged

    
    private void jButton_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_saveActionPerformed
        
        String name = (String)this.jComboBox1.getSelectedItem();
        AddToZapFile.lastZapFileUsed = name;
        
        String zapFileName = dl.getOptions().getZapFileRoot()+name+".zapfile";
        ZapFile zapFile = new ZapFile(new File(zapFileName));
        try {
            zapFile.read();
        } catch (IOException ex) {
            System.err.println("Could not read dud file: "+new File(zapFileName).getAbsolutePath());
            System.err.println("Will try and create new...");
            zapFile.setTitle(name);
        }
        
        
        
        int nharm = Integer.parseInt(this.jTextField_nharm.getText().trim());
        int nsub = Integer.parseInt(this.jTextField_nsub.getText().trim());
        boolean proportionalWidth = this.jCheckBox1.isSelected();
        double centre = Double.parseDouble(this.jTextField_centre.getText());
        
        double width = Double.parseDouble(this.jTextField_width.getText());
        
        double start,end,ewidth;
        for(int i = 1; i <= nharm; i++){
            if(proportionalWidth)ewidth = width * i;
            else ewidth = width;
            start = (double)i*centre - ewidth/2.0;
            end = (double)i*centre + ewidth/2.0;
            
            zapFile.addFilter(new FrequencyFilter(start,end));
        }
        
        for(int i = 2; i <= nsub; i++){
            if(proportionalWidth)ewidth = width / (double)i;
            else ewidth = width;
            start = centre/(double)i - ewidth/2.0;
            end = centre/(double)i + ewidth/2.0;
            
            zapFile.addFilter(new FrequencyFilter(start,end));
        }
        try {
            zapFile.write();
            this.dl.getOptions().getZapFiles().add(new Pair(name,true));
        } catch (IOException ex) {
            System.err.println("Could not write dud file: "+new File(zapFileName).getAbsolutePath());
        }
        
        mv.reZap();
        this.setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_jButton_saveActionPerformed
    
    
    private void jButton_canceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_canceActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton_canceActionPerformed
    
    private void jTextField_centreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_centreActionPerformed
        this.refreshTextWindow();
    }//GEN-LAST:event_jTextField_centreActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_cance;
    private javax.swing.JButton jButton_create;
    private javax.swing.JButton jButton_save;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField_centre;
    private javax.swing.JTextField jTextField_nharm;
    private javax.swing.JTextField jTextField_nsub;
    private javax.swing.JTextField jTextField_width;
    // End of variables declaration//GEN-END:variables
    
}
