/*
Copyright (C) 2005-2007 Michael Keith, University Of Manchester
 
email: mkeith@pulsarastronomy.net
www  : www.pulsarastronomy.net/wiki/Software/PulsarHunter
 
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.
 
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 
 */
/*
 * OptionsFrame.java
 *
 * Created on 26 May 2005, 20:38
 */

package pulsarhunter.jreaper.gui;

import java.awt.Color;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import pulsarhunter.jreaper.Cand;
import pulsarhunter.jreaper.CandList;
import pulsarhunter.jreaper.Main;
import pulsarhunter.jreaper.ScoreParams;


/**
 *
 * @author  mkeith
 */
public class OptionsFrame extends javax.swing.JFrame {
    
    private MainView mv;
    
    /** Creates new form OptionsFrame */
    public OptionsFrame(MainView mv) {
//        initComponents();
//        this.mv = mv;
//        
//        zColChooser.setModel(new DefaultComboBoxModel(Colourmap.getZcolourmaps()));
//        grayColChooser.setModel(new DefaultComboBoxModel(Colourmap.getGrayscaleColormaps()));
//        zColChooser.setSelectedItem(Colourmap.getCurrentZcolormap());
//        grayColChooser.setSelectedItem(Colourmap.getCurrentGrayColormap());
//        
//        knownPulsarFileField.setText(Main.getInstance().getKnownPulsarFile());
//        knownPulsarFormatField.setText(Main.getInstance().getKnownPulsarFormat());
//        stdColField.setText("#"+getHexString(Colourmap.getCurrentMainViewColour(0).getRed()) + getHexString(Colourmap.getCurrentMainViewColour(0).getGreen()) + getHexString(Colourmap.getCurrentMainViewColour(0).getBlue()));
//        accColField.setText("#"+getHexString(Colourmap.getCurrentMainViewColour(1).getRed()) + getHexString(Colourmap.getCurrentMainViewColour(1).getGreen()) + getHexString(Colourmap.getCurrentMainViewColour(1).getBlue()));
//        lngColField.setText("#"+getHexString(Colourmap.getCurrentMainViewColour(2).getRed()) + getHexString(Colourmap.getCurrentMainViewColour(2).getGreen()) + getHexString(Colourmap.getCurrentMainViewColour(2).getBlue()));
//        altColField.setText("#"+getHexString(Colourmap.getCurrentMainViewColour(3).getRed()) + getHexString(Colourmap.getCurrentMainViewColour(3).getGreen()) + getHexString(Colourmap.getCurrentMainViewColour(3).getBlue()));
//        etaField.setText(Main.getInstance().getEta()+"");
//        seperationField.setText(Main.getInstance().getDistmax()+"");
//        
//        
//        
//        this.jTextField_AdditionalScore.setText(String.valueOf(ScoreParams.getAdditionalScoreFactor()));
//        this.jTextField_DMCurve.setText(String.valueOf(ScoreParams.getDmcurveshapeFactor()));
//        this.jTextField_DMZeroDiff.setText(String.valueOf(ScoreParams.getDmzerodiffFactor()));
//        this.jTextField_Freq.setText(String.valueOf(ScoreParams.getFreqVarianceFactor()));
//        this.jTextField_ProfileHigh.setText(String.valueOf(ScoreParams.getProfileHighValueFactor()));
//        this.jTextField_ProfileShape.setText(String.valueOf(ScoreParams.getProfileShapeFactor()));
//        this.jTextField_SNRFactor.setText(String.valueOf(ScoreParams.getSnrFactor()));
//        this.jTextField_SubintGeneral.setText(String.valueOf(ScoreParams.getSubintGeneralFactor()));
//        this.jTextField_SubintLinear.setText(String.valueOf(ScoreParams.getSubintLinearFactor()));
//        this.jTextField_Width.setText(String.valueOf(ScoreParams.getWidthFactor()));
//        
//        
        
        
        
    }
    
    private String getHexString(int i){
        if(i<16) return "0"+Integer.toHexString(i);
        else return Integer.toHexString(i);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        zColChooser = new javax.swing.JComboBox();
        grayColChooser = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stdColField = new javax.swing.JTextField();
        accColField = new javax.swing.JTextField();
        lngColField = new javax.swing.JTextField();
        altColField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        knownPulsarFileField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        knownPulsarFormatField = new javax.swing.JTextField();
        seperationField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        etaField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_SNRFactor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_DMZeroDiff = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_DMCurve = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_Width = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField_Freq = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField_ProfileShape = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField_ProfileHigh = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField_SubintLinear = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextField_SubintGeneral = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField_AdditionalScore = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Z Axis Colours");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel2.setText("Grayscale Plot Colours");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jPanel1.add(zColChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 130, -1));

        jPanel1.add(grayColChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 130, -1));

        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 350, 10));

        jLabel3.setText("Standard Search");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel4.setText("Acceleration Search");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel5.setText("Long Period Search");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jLabel6.setText("Alt Search");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        jPanel1.add(stdColField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 130, -1));

        accColField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accColFieldActionPerformed(evt);
            }
        });

        jPanel1.add(accColField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 130, -1));

        jPanel1.add(lngColField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 130, -1));

        jPanel1.add(altColField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 130, -1));

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, -1));

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        jButton3.setText("Choose");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));

        jButton4.setText("Choose");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, -1, -1));

        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 350, -1));

        jLabel7.setText("Background");
        jLabel7.setEnabled(false);
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        jTextField5.setEnabled(false);
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 130, -1));

        jButton5.setText("Choose");
        jButton5.setEnabled(false);
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));

        jTabbedPane1.addTab("Colours", jPanel1);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setText("Known Pulsar File");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jPanel4.add(knownPulsarFileField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 200, -1));

        jLabel13.setText("Known Pulsar Format");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jPanel4.add(knownPulsarFormatField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 200, -1));

        jPanel4.add(seperationField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 70, -1));

        jLabel14.setText("Pulsar Redetection");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel15.setText("Max Seperation");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jLabel16.setText("Max Period Difference");
        jLabel16.setToolTipText("difference in known period to trial period as a factor of the known period");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        etaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etaFieldActionPerformed(evt);
            }
        });

        jPanel4.add(etaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 70, -1));

        jLabel17.setText("Degrees");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));

        jLabel18.setText("x Known Period");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        jTabbedPane1.addTab("General", jPanel4);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setToolTipText("Configure the scoring options");
        jPanel3.setName("Scoring");
        jPanel5.setLayout(new java.awt.GridLayout(10, 2));

        jLabel8.setText("SNR Factor");
        jPanel5.add(jLabel8);

        jTextField_SNRFactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SNRFactorActionPerformed(evt);
            }
        });

        jPanel5.add(jTextField_SNRFactor);

        jLabel9.setText("DM Zero Diff");
        jPanel5.add(jLabel9);

        jTextField_DMZeroDiff.setText("jTextField1");
        jPanel5.add(jTextField_DMZeroDiff);

        jLabel10.setText("DM Curve");
        jPanel5.add(jLabel10);

        jTextField_DMCurve.setText("jTextField1");
        jPanel5.add(jTextField_DMCurve);

        jLabel11.setText("Width Factor");
        jPanel5.add(jLabel11);

        jTextField_Width.setText("jTextField1");
        jPanel5.add(jTextField_Width);

        jLabel19.setText("Frequency Channels (Not Used)");
        jPanel5.add(jLabel19);

        jTextField_Freq.setText("jTextField1");
        jPanel5.add(jTextField_Freq);

        jLabel20.setText("Profile Shape (Not Used)");
        jPanel5.add(jLabel20);

        jTextField_ProfileShape.setText("jTextField1");
        jPanel5.add(jTextField_ProfileShape);

        jLabel21.setText("Duty Cycle");
        jPanel5.add(jLabel21);

        jTextField_ProfileHigh.setText("jTextField2");
        jPanel5.add(jTextField_ProfileHigh);

        jLabel22.setText("Period Curve");
        jPanel5.add(jLabel22);

        jTextField_SubintLinear.setText("jTextField3");
        jPanel5.add(jTextField_SubintLinear);

        jLabel23.setText("Hough Plane Score");
        jPanel5.add(jLabel23);

        jTextField_SubintGeneral.setText("jTextField4");
        jPanel5.add(jTextField_SubintGeneral);

        jLabel24.setText("Custom Score");
        jPanel5.add(jLabel24);

        jTextField_AdditionalScore.setText("jTextField6");
        jPanel5.add(jTextField_AdditionalScore);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Scoring", jPanel3);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jButton6.setText("Ok");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton6);

        jButton7.setText("Default");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton7);

        jButton8.setText("Cancel");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton8);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-500)/2, 400, 500);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField_SNRFactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SNRFactorActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SNRFactorActionPerformed
    
    private void accColFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accColFieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_accColFieldActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        Color newCol = JColorChooser.showDialog(this, "Choose a Colour", Colourmap.getCurrentMainViewColour(0));
//        if(newCol != null){
//            stdColField.setText("#"+getHexString(newCol.getRed()) + getHexString(newCol.getGreen()) + getHexString(newCol.getBlue()));
//        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        Color newCol = JColorChooser.showDialog(this, "Choose a Colour", Colourmap.getCurrentMainViewColour(1));
//        if(newCol != null){
//            accColField.setText("#"+getHexString(newCol.getRed()) + getHexString(newCol.getGreen()) + getHexString(newCol.getBlue()));
//        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        Color newCol = JColorChooser.showDialog(this, "Choose a Colour", Colourmap.getCurrentMainViewColour(2));
//        if(newCol != null){
//            lngColField.setText("#"+getHexString(newCol.getRed()) + getHexString(newCol.getGreen()) + getHexString(newCol.getBlue()));
//        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        Color newCol = JColorChooser.showDialog(this, "Choose a Colour", Colourmap.getCurrentMainViewColour(3));
//        if(newCol != null){
//            stdColField.setText("#"+getHexString(newCol.getRed()) + getHexString(newCol.getGreen()) + getHexString(newCol.getBlue()));
//        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void etaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etaFieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_etaFieldActionPerformed
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
//        if(this.jTabbedPane1.getSelectedIndex() == 0){
//            stdColField.setText("Red");
//            accColField.setText("Blue");
//            lngColField.setText("Green");
//            altColField.setText("Orange");
//            
//            zColChooser.setSelectedItem(Colourmap.defaultZColmap);
//            grayColChooser.setSelectedItem(Colourmap.defaultGreyColmap);
//        }
//        if(this.jTabbedPane1.getSelectedIndex() == 1){
//            this.knownPulsarFileField.setText("./knownpulsars.list");
//            this.knownPulsarFormatField.setText("NAME PERIOD X RA X DEC X");
//        }
    }//GEN-LAST:event_jButton7ActionPerformed
    
    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
//        Colourmap.useZcolormap((Colourmap)zColChooser.getSelectedItem());
//        Colourmap.useGraycolormap((Colourmap)grayColChooser.getSelectedItem());
//        Color col = Colourmap.getFromText(stdColField.getText());
//        if(col!=null){
//            Colourmap.setCurrentMainViewColour(0, col);
//            Colourmap.setCurrentMainViewColour(0+5, col);
//        }
//        col = Colourmap.getFromText(accColField.getText());
//        if(col!=null){
//            Colourmap.setCurrentMainViewColour(1, col);
//            Colourmap.setCurrentMainViewColour(1+5, col);
//        }
//        col = Colourmap.getFromText(lngColField.getText());
//        if(col!=null){
//            Colourmap.setCurrentMainViewColour(2, col);
//            Colourmap.setCurrentMainViewColour(2+5, col);
//        }
//        col = Colourmap.getFromText(altColField.getText());
//        if(col!=null){
//            Colourmap.setCurrentMainViewColour(3, col);
//            Colourmap.setCurrentMainViewColour(3+5, col);
//        }
//        
//        Main.getInstance().setEta(Double.parseDouble(etaField.getText()));
//        Main.getInstance().setDistmax(Double.parseDouble(seperationField.getText()));
//        Main.getInstance().setKnownPulsarFile(knownPulsarFileField.getText(),knownPulsarFormatField.getText());
//        
//        boolean err = false;
//        try {
//            ScoreParams.setAdditionalScoreFactor(Double.parseDouble(this.jTextField_AdditionalScore.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setDmcurveshapeFactor(Double.parseDouble(this.jTextField_DMCurve.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setDmzerodiffFactor(Double.parseDouble(this.jTextField_DMZeroDiff.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setFreqVarianceFactor(Double.parseDouble(this.jTextField_Freq.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setProfileHighValueFactor(Double.parseDouble(this.jTextField_ProfileHigh.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setProfileShapeFactor(Double.parseDouble(this.jTextField_ProfileShape.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setSnrFactor(Double.parseDouble(this.jTextField_SNRFactor.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setSubintGeneralFactor(Double.parseDouble(this.jTextField_SubintGeneral.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setSubintLinearFactor(Double.parseDouble(this.jTextField_SubintLinear.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        try {
//            ScoreParams.setWidthFactor(Double.parseDouble(this.jTextField_Width.getText()));
//        } catch (NumberFormatException ex) {
//            if(!err)new MessageBox("Bad formating in score config...\nNot all changes saved!").setVisible(true);
//            err=true;
//        }
//        
//        
//        for(CandList list : Main.getInstance().getLoadedCandLists()){
//            for(Cand[] arr : list.getCands()){
//                for(Cand c : arr){
//                    c.recalcScore();
//                }
//            }
//        }
//        
//        
//        this.setVisible(false);
//        this.dispose();
//        Main.getInstance().saveOptions();
//        if(mv!=null)
//            mv.replot();
    }//GEN-LAST:event_jButton6ActionPerformed
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accColField;
    private javax.swing.JTextField altColField;
    private javax.swing.JTextField etaField;
    private javax.swing.JComboBox grayColChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField_AdditionalScore;
    private javax.swing.JTextField jTextField_DMCurve;
    private javax.swing.JTextField jTextField_DMZeroDiff;
    private javax.swing.JTextField jTextField_Freq;
    private javax.swing.JTextField jTextField_ProfileHigh;
    private javax.swing.JTextField jTextField_ProfileShape;
    private javax.swing.JTextField jTextField_SNRFactor;
    private javax.swing.JTextField jTextField_SubintGeneral;
    private javax.swing.JTextField jTextField_SubintLinear;
    private javax.swing.JTextField jTextField_Width;
    private javax.swing.JTextField knownPulsarFileField;
    private javax.swing.JTextField knownPulsarFormatField;
    private javax.swing.JTextField lngColField;
    private javax.swing.JTextField seperationField;
    private javax.swing.JTextField stdColField;
    private javax.swing.JComboBox zColChooser;
    // End of variables declaration//GEN-END:variables
    
}
