/*
Copyright (C) 2005-2007 Michael Keith, University Of Manchester

email: mkeith@pulsarastronomy.net
www  : www.pulsarastronomy.net/wiki/Software/PulsarHunter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

*/
/*
 * profilePanel.java
 *
 * Created on 27 May 2005, 15:37
 */

package pulsarhunter.jreaper.pmsurv;

import ptolemy.plot.Plot;
import pulsarhunter.jreaper.Cand;

/**
 *
 * @author  mkeith
 */
public class ProfilePanel extends Plot {
    
    /** Creates new form profilePanel */
    public ProfilePanel(Cand cand,final double phase) {
        
        final PulsarCandFile phfile = (PulsarCandFile)cand.getCandidateFile();
        initComponents();
        
        _setPadding(0.0);
        clear(true);
        
        setTitle("Profile");
        setXLabel("Phase");
        setYLabel("Signal");
        setMarksStyle("dots", 1);
        int nbin = phfile.getNbin();
        int maxposn = 0;
        float maxVal = Float.MIN_VALUE;
        float[] prof = phfile.getProfile(phase);
        for(int i = 0;i<prof.length;i++){
            if(prof[i] > maxVal){
                maxVal = prof[i];
                maxposn = i;
            }
            addPoint(0,i/((double)nbin),prof[i],true);
        }
        int numP = cand.getNPulses();
        float spacing = (float)nbin / (float)numP;
        for(int i = 1; i <= numP; i++){
            int bin = (int)(spacing * i) + maxposn;
            while(bin >= nbin) bin -= nbin;
            addPoint(1,bin/((double)nbin),0,false);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProfilePanel.this.repaint();
            }
        });
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        setLayout(new java.awt.BorderLayout());

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
