/*
Copyright (C) 2005-2007 Michael Keith, University Of Manchester

email: mkeith@pulsarastronomy.net
www  : www.pulsarastronomy.net/wiki/Software/PulsarHunter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

*/
/*
 * OfflinePlotPanel.java
 *
 * Created on 28 May 2005, 14:01
 */

package pulsarhunter.jreaper.pmsurv;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.JLabel;
import pulsarhunter.jreaper.Cand;


/**
 *
 * @author  mkeith
 */
public class OfflinePlotPanel extends javax.swing.JPanel {
    
    Cand cand;
    PulsarCandFile phfile;
    private FrequencyPanel frequencyPanel;
    private ProfilePanel profilePanel;
    private PDMFrame pdmF ;
    private SubintPanel sip;
    /** Creates new form OfflinePlotPanel */
    public OfflinePlotPanel(Cand cand) {
        initComponents();
        
        this.cand = cand;
        this.phfile = (PulsarCandFile)cand.getCandidateFile();
        //jLabel1.setText(candidate.getComment());
        //jLabel2.setText("Location: "+candidate.getBeam().getCoord().toString());
        //infoBox.setText(phfile.getText());
        //commentHistory.setText(candidate.getCommentHistory());
        
        
        
        phfile.read();
        //jLabel2.setText(phfile.getText());
        double snr = cand.getSNR();
        int subints = 64;
        if(snr < 12) subints /= 2;
        if(snr < 10) subints /= 2;
        if(snr < 8) subints /= 2;
        sip = new SubintPanel(phfile,cand,1.5,subints,false);
        frequencyPanel = new FrequencyPanel(phfile,cand,1.5,false);
        frequencyPanel.setBackground(new java.awt.Color(255, 255, 255));
        freqPhasePanel.add(frequencyPanel, java.awt.BorderLayout.CENTER);
        profilePanel = new ProfilePanel(cand,1.5);
        profilePanel.setBackground(new java.awt.Color(255, 255, 255));
        profPanel.add(profilePanel, java.awt.BorderLayout.CENTER);
        DMCurvePanel dmCurvePanel = new DMCurvePanel(cand);
        dmCurvePanel.setBackground(new java.awt.Color(255, 255, 255));
        dmPanel.add(dmCurvePanel, java.awt.BorderLayout.CENTER);
        
        
        //SubintPanel subintPanel = new SubintPanel(phfile,1.5);
        //timePhasePanel.add(subintPanel, java.awt.BorderLayout.CENTER);
        
        pdmF = new PDMFrame(phfile,cand,false);
        sip.setBackground(new java.awt.Color(255, 255, 255));
        pdmF.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.add(sip);
        jPanel2.add(pdmF);
        JLabel headerLabel = new JLabel();
        headerLabel.setText(cand.getComment());
        headerPanel.add(headerLabel);
        String[] headers = phfile.getHeaders();
        for(String header : headers){
            headerLabel = new JLabel();
            headerLabel.setText(header);
            headerPanel.add(headerLabel);
        }
        
        headers = phfile.getPDMParams();
        for(String header : headers){
            headerLabel = new JLabel();
            headerLabel.setText(header);
            headerLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
            pdmHeaderPanel.add(headerLabel);
        }
        //header1.setText(phfile.getHeader(1));
        
        
    }
    
    public void join(){
        
    }
    
    public BufferedImage getCandImg(){
        validate();
        Dimension size = this.getSize();
        BufferedImage result = new BufferedImage(size.width,size.height,BufferedImage.TYPE_INT_RGB);
        Graphics graphics = result.getGraphics();
        this.paint(graphics);
        return result;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel3 = new javax.swing.JPanel();
        centerPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        dmPanel = new javax.swing.JPanel();
        freqPhasePanel = new javax.swing.JPanel();
        profPanel = new javax.swing.JPanel();
        pdmHeaderPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        centerPanel.setLayout(new java.awt.GridLayout(1, 2));

        centerPanel.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(2, 1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        centerPanel.add(jPanel2);

        jPanel1.setLayout(new java.awt.GridLayout(4, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        dmPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.add(dmPanel);

        freqPhasePanel.setLayout(new java.awt.BorderLayout());

        jPanel1.add(freqPhasePanel);

        profPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.add(profPanel);

        pdmHeaderPanel.setLayout(new javax.swing.BoxLayout(pdmHeaderPanel, javax.swing.BoxLayout.Y_AXIS));

        pdmHeaderPanel.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("PDM Header");
        pdmHeaderPanel.add(jLabel1);

        jPanel1.add(pdmHeaderPanel);

        centerPanel.add(jPanel1);

        jPanel3.add(centerPanel, java.awt.BorderLayout.CENTER);

        headerPanel.setLayout(new javax.swing.BoxLayout(headerPanel, javax.swing.BoxLayout.Y_AXIS));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.add(headerPanel, java.awt.BorderLayout.NORTH);

        add(jPanel3, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel dmPanel;
    private javax.swing.JPanel freqPhasePanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel pdmHeaderPanel;
    private javax.swing.JPanel profPanel;
    // End of variables declaration//GEN-END:variables
    
}
