/*
 * JReaperSetupFrame.java
 *
 * Created on 8 September 2008, 12:42
 */
package pulsarhunter.bookkeepr.jreaper;

import bookkeepr.xmlable.CandidateListStub;
import bookkeepr.xmlable.Processing;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractListModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import pulsarhunter.jreaper.gui.ImagePanel;

/**
 *
 * @author  kei041
 */
public class JReaperSetupFrame extends javax.swing.JFrame {

    private HashMap<String, ArrayList<CandidateListStub>> candListStubs = new HashMap<String, ArrayList<CandidateListStub>>();
    private HashMap<String, ArrayList<CandidateListStub>> dateCandListStubs = new HashMap<String, ArrayList<CandidateListStub>>();
    private ArrayList<String> allDates = new ArrayList<String>();
    private ArrayList<CandidateListStub> loadedCandidateListStubs = new ArrayList<CandidateListStub>();
    private JReaper jreaper;
    private BookKeeprConnection connection;

    /** Creates new form JReaperSetupFrame */
    public JReaperSetupFrame(JReaper jreaper, BookKeeprConnection connection) {
        this.connection = connection;
        this.jreaper = jreaper;
        initComponents();

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        if (screenSize.width > 2 * screenSize.height) {
            setBounds((screenSize.width / 2 - this.getWidth()) / 2, (screenSize.height - this.getHeight()) / 2, this.getWidth(), this.getHeight());
        } else {
            setBounds((screenSize.width - this.getWidth()) / 2, (screenSize.height - this.getHeight()) / 2, this.getWidth(), this.getHeight());
        }
        BufferedImage splashimage = null;
        try {
            java.net.URL imageurl = this.getClass().getResource("jreaper5.png");

            if (imageurl != null) {
                splashimage = ImageIO.read(imageurl);
                //splashimage = ImageIO.read(new File("jreaperlogo3.0.png"));
                JPanel iPanel = new ImagePanel(splashimage);
                iPanel.setBackground(new java.awt.Color(0, 0, 0));
                jPanel_top.add(iPanel, java.awt.BorderLayout.CENTER);
            }
            if (splashimage != null) {
                this.jPanel_centre.setBackground(new Color(splashimage.getRGB(0, 0)));
                this.jPanel_loadingPanel.setBackground(new Color(splashimage.getRGB(0, 0)));

            }

        } catch (IOException e) {
            e.printStackTrace();
        }

        String url = "";
        String usr = jreaper.getUser();
        if (connection.getRemoteHost() != null) {
            url = connection.getRemoteHost().getUrl();
        }
        clearConnection();

        if (connection.getRemoteHost() != null) {
            this.jTextField_user.setText(usr);
            this.jTextField_url.setText(url);
//            this.serverConnected();
        } else {
            clearConnection();
        }
    }

    public void showLoadingPane() {
        this.remove(jPanel_centre);
        this.add(jPanel_loadingPanel, BorderLayout.CENTER);
    }

    public void setLoadingPaneDone() {
        this.jButton_loadDone.setEnabled(true);
        this.jLabel_loadingLabel.setText("DONE!");
        this.jLabel_loadingLabel.setForeground(Color.GREEN);
    }

    public void setLoadingPane(int toLoad, int loaded, int failed, int totalCands) {
        this.jLabel_toLoad.setText(String.valueOf(toLoad));
        this.jLabel_loaded.setText(String.valueOf(loaded));
        this.jLabel_failed.setText(String.valueOf(failed));
        this.jLabel_totalCands.setText(String.valueOf(totalCands));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_loadingPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel_toLoad = new javax.swing.JLabel();
        jLabel_loaded = new javax.swing.JLabel();
        jLabel_failed = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel_totalCands = new javax.swing.JLabel();
        jLabel_loadingLabel = new javax.swing.JLabel();
        jButton_loadDone = new javax.swing.JButton();
        jPanel_centre = new javax.swing.JPanel();
        jPanel_server = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_url = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel_status = new javax.swing.JLabel();
        jTextField_user = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel_user = new javax.swing.JLabel();
        jPanel_clists = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel_subpanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox_startDate = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jComboBox_endDate = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel_top = new javax.swing.JPanel();

        jPanel_loadingPanel.setBackground(new java.awt.Color(183, 202, 237));
        jPanel_loadingPanel.setMaximumSize(new java.awt.Dimension(780, 537));
        jPanel_loadingPanel.setMinimumSize(new java.awt.Dimension(780, 537));
        jPanel_loadingPanel.setPreferredSize(new java.awt.Dimension(780, 537));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Loading Candidate Lists"));
        jPanel1.setOpaque(false);

        jLabel9.setText("Candidate Lists To Load:");

        jLabel10.setText("Candidate Lists Loaded:");

        jLabel11.setText("Candidate Lists Failed To Load:");

        jLabel_toLoad.setText("jLabel12");

        jLabel_loaded.setText("jLabel13");

        jLabel_failed.setText("jLabel14");

        jLabel12.setText("Total Candidates Loaded:");

        jLabel_totalCands.setText("jLabel13");

        jLabel_loadingLabel.setFont(new java.awt.Font("Dialog", 1, 24));
        jLabel_loadingLabel.setText("Loading.......");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel_toLoad)
                            .add(jLabel_loaded)
                            .add(jLabel_failed)
                            .add(jLabel_totalCands)))
                    .add(jLabel_loadingLabel))
                .addContainerGap(454, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(jLabel_toLoad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(jLabel_loaded))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(jLabel_failed))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel_totalCands))
                .add(18, 18, 18)
                .add(jLabel_loadingLabel)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        jButton_loadDone.setText("Continue");
        jButton_loadDone.setEnabled(false);
        jButton_loadDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_loadDoneActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel_loadingPanelLayout = new org.jdesktop.layout.GroupLayout(jPanel_loadingPanel);
        jPanel_loadingPanel.setLayout(jPanel_loadingPanelLayout);
        jPanel_loadingPanelLayout.setHorizontalGroup(
            jPanel_loadingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel_loadingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_loadingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jButton_loadDone, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_loadingPanelLayout.setVerticalGroup(
            jPanel_loadingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_loadingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 26, Short.MAX_VALUE)
                .add(jButton_loadDone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JReaper 5");
        setBackground(new java.awt.Color(204, 204, 255));
        setResizable(false);

        jPanel_centre.setBackground(new java.awt.Color(183, 202, 237));

        jPanel_server.setBorder(javax.swing.BorderFactory.createTitledBorder("BookKeepr Server"));
        jPanel_server.setOpaque(false);

        jLabel1.setText("Server URL:");

        jTextField_url.setText("http://localhost:24001");
        jTextField_url.setToolTipText("Enter the url for the server to connect to");
        jTextField_url.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_urlActionPerformed(evt);
            }
        });

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Status:");

        jLabel_status.setText("Unknown");

        jTextField_user.setText("Anon");
        jTextField_user.setToolTipText("Enter your user name. Enter a new name to create a new user");

        jLabel3.setText("Name:");

        jLabel8.setText("Connected as: ");

        jLabel_user.setText("Noone");

        org.jdesktop.layout.GroupLayout jPanel_serverLayout = new org.jdesktop.layout.GroupLayout(jPanel_server);
        jPanel_server.setLayout(jPanel_serverLayout);
        jPanel_serverLayout.setHorizontalGroup(
            jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_serverLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel_serverLayout.createSequentialGroup()
                        .add(jLabel1)
                        .add(51, 51, 51)
                        .add(jTextField_url, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 215, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel_serverLayout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel_status, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel_serverLayout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField_user, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(jPanel_serverLayout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel_user, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel_serverLayout.setVerticalGroup(
            jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_serverLayout.createSequentialGroup()
                .add(jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel3)
                    .add(jButton1)
                    .add(jTextField_user, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField_url, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_serverLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jLabel8)
                    .add(jLabel_status)
                    .add(jLabel_user))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel_clists.setBorder(javax.swing.BorderFactory.createTitledBorder("Candidate Lists"));
        jPanel_clists.setOpaque(false);

        jButton3.setText("Quick Search");

        jButton4.setText("Advanced Search");

        jLabel4.setText("Searching ALL candidate lists");

        jPanel_subpanel.setOpaque(false);

        jLabel5.setText("Processing Runs");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        jButton5.setText("Load ->");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("x- Unload");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        jLabel6.setText("CandLists");

        jLabel7.setText("Selected to Load");

        org.jdesktop.layout.GroupLayout jPanel_subpanelLayout = new org.jdesktop.layout.GroupLayout(jPanel_subpanel);
        jPanel_subpanel.setLayout(jPanel_subpanelLayout);
        jPanel_subpanelLayout.setHorizontalGroup(
            jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_subpanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 173, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel_subpanelLayout.createSequentialGroup()
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 174, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .add(jLabel6))
                .add(6, 6, 6)
                .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel_subpanelLayout.setVerticalGroup(
            jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_subpanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jLabel6)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .add(jPanel_subpanelLayout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jPanel_subpanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel_subpanelLayout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jButton5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton6))
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                    .add(jPanel_subpanelLayout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel13.setText("Filter by observation date:");

        jComboBox_startDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setText("to");

        jComboBox_endDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.layout.GroupLayout jPanel_clistsLayout = new org.jdesktop.layout.GroupLayout(jPanel_clists);
        jPanel_clists.setLayout(jPanel_clistsLayout);
        jPanel_clistsLayout.setHorizontalGroup(
            jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_clistsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel_subpanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel_clistsLayout.createSequentialGroup()
                        .add(jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel_clistsLayout.createSequentialGroup()
                                .add(jLabel13)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox_startDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 161, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel14)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox_endDate, 0, 247, Short.MAX_VALUE))
                            .add(jPanel_clistsLayout.createSequentialGroup()
                                .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButton4)))
                        .add(92, 92, 92)))
                .addContainerGap())
        );
        jPanel_clistsLayout.setVerticalGroup(
            jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_clistsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton3)
                    .add(jLabel4)
                    .add(jButton4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_clistsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jLabel14)
                    .add(jComboBox_endDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBox_startDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_subpanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton2.setText("Go To Plot");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setText("Quit");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel_centreLayout = new org.jdesktop.layout.GroupLayout(jPanel_centre);
        jPanel_centre.setLayout(jPanel_centreLayout);
        jPanel_centreLayout.setHorizontalGroup(
            jPanel_centreLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_centreLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_centreLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel_clists, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel_server, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel_centreLayout.createSequentialGroup()
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton7)))
                .addContainerGap())
        );
        jPanel_centreLayout.setVerticalGroup(
            jPanel_centreLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_centreLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_server, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_clists, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel_centreLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2)
                    .add(jButton7))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel_centre, java.awt.BorderLayout.CENTER);

        jPanel_top.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel_top.setMinimumSize(new java.awt.Dimension(800, 100));
        jPanel_top.setPreferredSize(new java.awt.Dimension(800, 100));
        jPanel_top.setLayout(new java.awt.BorderLayout());
        getContentPane().add(jPanel_top, java.awt.BorderLayout.PAGE_START);

        setBounds(0, 0, 780, 655);
    }// </editor-fold>//GEN-END:initComponents

private void jTextField_urlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_urlActionPerformed
}//GEN-LAST:event_jTextField_urlActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.jLabel_status.setText("Connecting...");

    new Thread() {

        @Override
        public void run() {
            super.run();
            try {
                connection.setUrl(jTextField_url.getText());
                jTextField_url.setText(connection.getRemoteHost().getUrl());
                jreaper.setUser(jTextField_user.getText());
                serverConnected();
            } catch (URISyntaxException ex) {
                clearConnection();
                jLabel_status.setText("Bad URL specified");
            } catch (BookKeeprCommunicationException ex) {
                clearConnection();
                jLabel_status.setText("Could not connect to server");
            }
            jLabel_status.setText(connection.getStatus());
        }
    }.start();


}//GEN-LAST:event_jButton1ActionPerformed

private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
    reSelectList();
}//GEN-LAST:event_jList1ValueChanged

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    Object[] values = this.jList2.getSelectedValues();
    for (Object o : values) {
        CandidateListStub stub = (CandidateListStub) o;
        this.loadedCandidateListStubs.add(stub);
    }
    reSelectList();
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    Object[] values = this.jList3.getSelectedValues();
    for (Object o : values) {
        CandidateListStub stub = (CandidateListStub) o;
        this.loadedCandidateListStubs.remove(stub);
    }
    reSelectList();

}//GEN-LAST:event_jButton6ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    Thread thread = new Thread() {

        @Override
        public void run() {
            super.run();
            jreaper.goToPlot(loadedCandidateListStubs);
        }
    };
    thread.start();
    this.setVisible(false);
    this.dispose();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    this.setVisible(false);
    this.dispose();
}//GEN-LAST:event_jButton7ActionPerformed

private void jButton_loadDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_loadDoneActionPerformed
    this.jreaper.goToPlotDone();
}//GEN-LAST:event_jButton_loadDoneActionPerformed

    private void reSelectList() {

        final Object[] objArr = this.jList1.getSelectedValues();
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                final ArrayList<CandidateListStub> clists = new ArrayList<CandidateListStub>();
                for (Object o : objArr) {
                    clists.addAll(candListStubs.get(o));
                }
                jList2.setModel(new AbstractListModel() {

                    public int getSize() {
                        return clists.size();
                    }

                    public Object getElementAt(int index) {
                        return clists.get(index);
                    }
                });
                int[] select = new int[clists.size()];
                for (int i = 0; i < select.length; i++) {
                    select[i] = i;
                }

                jList2.setSelectedIndices(select);


                jList3.setModel(new AbstractListModel() {

                    public int getSize() {
                        return loadedCandidateListStubs.size();
                    }

                    public Object getElementAt(int index) {
                        return loadedCandidateListStubs.get(index);
                    }
                });
            }
        });

    }

    private void setClistPanelEnabled(boolean enabled) {
        for (Component c : this.jPanel_clists.getComponents()) {
            c.setEnabled(enabled);
        }
        for (Component c : this.jPanel_subpanel.getComponents()) {
            c.setEnabled(enabled);
        }
        this.jList1.setEnabled(enabled);
        this.jList2.setEnabled(enabled);
        this.jList3.setEnabled(enabled);
        this.jComboBox_endDate.setEnabled(enabled);
        this.jComboBox_startDate.setEnabled(enabled);

        final ArrayList<String> processes = new ArrayList<String>(this.candListStubs.keySet());
        this.jList1.setModel(new AbstractListModel() {

            public int getSize() {
                return processes.size();
            }

            public Object getElementAt(int index) {
                return processes.get(index);
            }
        });
        reSelectList();

    }

    private void clearConnection() {
        this.candListStubs.clear();
        this.allDates.clear();
        this.dateCandListStubs.clear();
        this.setClistPanelEnabled(false);
        jreaper.setUser("noone");
        this.jLabel_user.setText(jreaper.getUser());
    }

    private void clistFilterChanged() {
        ArrayList<CandidateListStub> clists = new ArrayList<CandidateListStub>();

//          this.dateCandListStubs.get(date);

        int startDate = this.jComboBox_startDate.getSelectedIndex();
        int endDate = this.jComboBox_endDate.getSelectedIndex();

        for (int i = startDate; i <= endDate; i++) {
            clists.addAll(this.dateCandListStubs.get(allDates.get(i)));
        }

        HashMap<Long, Processing> processes = new HashMap<Long, Processing>();

        for (CandidateListStub cl : clists) {

            Processing p = processes.get(cl.getProcessingId());
            if (p == null) {
                try {
                    p = connection.getProcess(cl.getProcessingId());
                } catch (BookKeeprCommunicationException ex) {
                    Logger.getLogger(JReaperSetupFrame.class.getName()).log(Level.WARNING, "Couldn't get a matching 'Processing' object for candidate list " + Long.toHexString(cl.getId()));
                    ArrayList<CandidateListStub> list = candListStubs.get("Lost");
                    if (list == null) {
                        list = new ArrayList<CandidateListStub>();
                        candListStubs.put("Lost", list);
                    }
                    list.add(cl);
                    continue;
                }

                processes.put(p.getId(), p);
                candListStubs.put(p.toString(), new ArrayList<CandidateListStub>());
            }
            ArrayList<CandidateListStub> list = candListStubs.get(p.toString());
            list.add(cl);
        }
        this.jLabel_user.setText(jreaper.getUser());
        this.setClistPanelEnabled(true);
        jreaper.connected();
    }

    private void serverConnected() {
        // clear out the old connection
        clearConnection();

        jreaper.setUser(this.jTextField_user.getText());

        List<CandidateListStub> clists = null;
        HashMap<Long, Processing> processes = new HashMap<Long, Processing>();
        try {
            clists = connection.getAllCandLists();
        } catch (BookKeeprCommunicationException ex) {
            Logger.getLogger(JReaperSetupFrame.class.getName()).log(Level.WARNING, null, ex);
            return;
        }
        for (CandidateListStub cl : clists) {

            String date = cl.getObservedDate();

            if (date == null) {
                date = "UNK";
            }
            ArrayList<CandidateListStub> list = candListStubs.get(date);
            if (list == null) {
                list = new ArrayList<CandidateListStub>();
                candListStubs.put(date, list);
            }
            list.add(cl);
            this.allDates.add(date);
        }
        Collections.sort(allDates);
        if(allDates.isEmpty()){
           allDates.add("NO DATA"); 
        }
        this.jComboBox_startDate.setModel(new DefaultComboBoxModel(allDates.toArray()));
        this.jComboBox_startDate.setSelectedIndex(0);
        this.jComboBox_endDate.setModel(new DefaultComboBoxModel(allDates.toArray()));
        this.jComboBox_endDate.setSelectedIndex(allDates.size()-1);
        
        this.jLabel_user.setText(jreaper.getUser());
        this.setClistPanelEnabled(true);
        jreaper.connected();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton_loadDone;
    private javax.swing.JComboBox jComboBox_endDate;
    private javax.swing.JComboBox jComboBox_startDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_failed;
    private javax.swing.JLabel jLabel_loaded;
    private javax.swing.JLabel jLabel_loadingLabel;
    private javax.swing.JLabel jLabel_status;
    private javax.swing.JLabel jLabel_toLoad;
    private javax.swing.JLabel jLabel_totalCands;
    private javax.swing.JLabel jLabel_user;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_centre;
    private javax.swing.JPanel jPanel_clists;
    private javax.swing.JPanel jPanel_loadingPanel;
    private javax.swing.JPanel jPanel_server;
    private javax.swing.JPanel jPanel_subpanel;
    private javax.swing.JPanel jPanel_top;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField_url;
    private javax.swing.JTextField jTextField_user;
    // End of variables declaration//GEN-END:variables
}
